[{"D:\\Device-Notification-Subsystem-Frontend\\src\\index.js":"1","D:\\Device-Notification-Subsystem-Frontend\\src\\i18n.js":"2","D:\\Device-Notification-Subsystem-Frontend\\src\\utilities\\helpers.js":"3","D:\\Device-Notification-Subsystem-Frontend\\src\\utilities\\constants.js":"4","D:\\Device-Notification-Subsystem-Frontend\\src\\views\\Errors\\Page401.js":"5","D:\\Device-Notification-Subsystem-Frontend\\src\\containers\\Full\\Full.js":"6","D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Header\\Header.js":"7","D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Footer\\Footer.js":"8","D:\\Device-Notification-Subsystem-Frontend\\src\\store.js":"9","D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Breadcrumb\\Breadcrumb.js":"10","D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Sidebar\\Sidebar.js":"11","D:\\Device-Notification-Subsystem-Frontend\\src\\actions\\authActions.js":"12","D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Header\\HeaderDropdown.js":"13","D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Header\\HeaderLanguage.js":"14","D:\\Device-Notification-Subsystem-Frontend\\src\\routes.js":"15","D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Sidebar\\_nav.js":"16","D:\\Device-Notification-Subsystem-Frontend\\src\\actions\\types.js":"17","D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Form\\SwitchToggleButton.js":"18","D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Form\\RenderInput.js":"19","D:\\Device-Notification-Subsystem-Frontend\\src\\actions\\SearchRequestsAction.js":"20","D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Form\\RenderDateRangePicker.js":"21","D:\\Device-Notification-Subsystem-Frontend\\src\\components\\DataTable\\DataTableInfo.js":"22","D:\\Device-Notification-Subsystem-Frontend\\src\\reducers\\index.js":"23","D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Loaders\\StepLoading.js":"24","D:\\Device-Notification-Subsystem-Frontend\\src\\components\\SidebarMinimizer\\SidebarMinimizer.js":"25","D:\\Device-Notification-Subsystem-Frontend\\src\\api\\SearchRequestService.js":"26","D:\\Device-Notification-Subsystem-Frontend\\src\\reducers\\searchRequestReducer.js":"27","D:\\Device-Notification-Subsystem-Frontend\\src\\reducers\\authReducer.js":"28","D:\\Device-Notification-Subsystem-Frontend\\src\\views\\Dashboard\\Dashboard.js":"29","D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Loaders\\SimpleLoader.js":"30","D:\\Device-Notification-Subsystem-Frontend\\src\\reducers\\dashboardReducer.js":"31","D:\\Device-Notification-Subsystem-Frontend\\src\\actions\\DashboardServicesAction.js":"32","D:\\Device-Notification-Subsystem-Frontend\\src\\api\\DashboardServices.js":"33","D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Loaders\\TableLoader.js":"34","D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Form\\RenderSelect.js":"35","D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Form\\RenderTextarea.js":"36","D:\\Device-Notification-Subsystem-Frontend\\src\\reducers\\campaignStatusReducer.js":"37","D:\\Device-Notification-Subsystem-Frontend\\src\\actions\\CampaignStatusAction.js":"38","D:\\Device-Notification-Subsystem-Frontend\\src\\views\\CampaignStatus\\CampaignStatus.js":"39","D:\\Device-Notification-Subsystem-Frontend\\src\\reducers\\operatorsReducer.js":"40","D:\\Device-Notification-Subsystem-Frontend\\src\\actions\\operatorsAction.js":"41","D:\\Device-Notification-Subsystem-Frontend\\src\\views\\SearchRequests\\SearchRequests.js":"42","D:\\Device-Notification-Subsystem-Frontend\\src\\views\\SearchRequests\\SearchFilters.js":"43","D:\\Device-Notification-Subsystem-Frontend\\src\\views\\CreateNotification\\CreateNotification.js":"44","D:\\Device-Notification-Subsystem-Frontend\\src\\views\\CreateNotification\\SMS\\SMS.js":"45","D:\\Device-Notification-Subsystem-Frontend\\src\\views\\CreateNotification\\Email\\Email.js":"46","D:\\Device-Notification-Subsystem-Frontend\\src\\api\\createNotificationService.js":"47","D:\\Device-Notification-Subsystem-Frontend\\src\\api\\operatorsServices.js":"48","D:\\Device-Notification-Subsystem-Frontend\\src\\api\\campaignStatusServices.js":"49","D:\\Device-Notification-Subsystem-Frontend\\src\\actions\\dashboardServicesAction.js":"50","D:\\Device-Notification-Subsystem-Frontend\\src\\actions\\campaignStatusAction.js":"51"},{"size":2724,"mtime":1615229156470,"results":"52","hashOfConfig":"53"},{"size":3354,"mtime":1611582581219,"results":"54","hashOfConfig":"53"},{"size":16049,"mtime":1615197847394,"results":"55","hashOfConfig":"53"},{"size":3218,"mtime":1615183318027,"results":"56","hashOfConfig":"53"},{"size":4094,"mtime":1614577399472,"results":"57","hashOfConfig":"53"},{"size":6696,"mtime":1615229276739,"results":"58","hashOfConfig":"53"},{"size":3570,"mtime":1614520206999,"results":"59","hashOfConfig":"53"},{"size":2640,"mtime":1611487628441,"results":"60","hashOfConfig":"53"},{"size":2714,"mtime":1613656374637,"results":"61","hashOfConfig":"53"},{"size":3850,"mtime":1612275753885,"results":"62","hashOfConfig":"53"},{"size":8698,"mtime":1615142277721,"results":"63","hashOfConfig":"53"},{"size":3088,"mtime":1613727054633,"results":"64","hashOfConfig":"53"},{"size":3960,"mtime":1612421533079,"results":"65","hashOfConfig":"53"},{"size":2727,"mtime":1612436585919,"results":"66","hashOfConfig":"53"},{"size":2534,"mtime":1615142221529,"results":"67","hashOfConfig":"53"},{"size":3109,"mtime":1615142259140,"results":"68","hashOfConfig":"53"},{"size":2782,"mtime":1615028579888,"results":"69","hashOfConfig":"53"},{"size":2200,"mtime":1614929141074,"results":"70","hashOfConfig":"53"},{"size":3330,"mtime":1614708957980,"results":"71","hashOfConfig":"53"},{"size":1231,"mtime":1615063869681,"results":"72","hashOfConfig":"53"},{"size":5615,"mtime":1614166180404,"results":"73","hashOfConfig":"53"},{"size":2652,"mtime":1613742881315,"results":"74","hashOfConfig":"53"},{"size":2755,"mtime":1615028785781,"results":"75","hashOfConfig":"53"},{"size":2594,"mtime":1614018638126,"results":"76","hashOfConfig":"53"},{"size":2724,"mtime":1611487628453,"results":"77","hashOfConfig":"53"},{"size":552,"mtime":1614330889474,"results":"78","hashOfConfig":"53"},{"size":792,"mtime":1614280061833,"results":"79","hashOfConfig":"53"},{"size":3026,"mtime":1614280166832,"results":"80","hashOfConfig":"53"},{"size":12728,"mtime":1615267224748,"results":"81","hashOfConfig":"53"},{"size":186,"mtime":1614595786306,"results":"82","hashOfConfig":"53"},{"size":908,"mtime":1615183365307,"results":"83","hashOfConfig":"53"},{"size":1257,"mtime":1615229848662,"results":"84","hashOfConfig":"53"},{"size":396,"mtime":1615021309247,"results":"85","hashOfConfig":"53"},{"size":3048,"mtime":1615209020562,"results":"86","hashOfConfig":"53"},{"size":3782,"mtime":1614687319858,"results":"87","hashOfConfig":"53"},{"size":1134,"mtime":1615141901206,"results":"88","hashOfConfig":"53"},{"size":772,"mtime":1615021967025,"results":"89","hashOfConfig":"53"},{"size":604,"mtime":1615229910294,"results":"90","hashOfConfig":"53"},{"size":12753,"mtime":1615273343766,"results":"91","hashOfConfig":"53"},{"size":498,"mtime":1615028738325,"results":"92","hashOfConfig":"53"},{"size":549,"mtime":1615229736887,"results":"93","hashOfConfig":"53"},{"size":26192,"mtime":1615228944789,"results":"94","hashOfConfig":"53"},{"size":2749,"mtime":1613629023995,"results":"95","hashOfConfig":"53"},{"size":1462,"mtime":1615273003199,"results":"96","hashOfConfig":"53"},{"size":14089,"mtime":1615232045368,"results":"97","hashOfConfig":"53"},{"size":12327,"mtime":1615229679413,"results":"98","hashOfConfig":"53"},{"size":604,"mtime":1615229659413,"results":"99","hashOfConfig":"53"},{"size":154,"mtime":1615229743424,"results":"100","hashOfConfig":"53"},{"size":166,"mtime":1615229791263,"results":"101","hashOfConfig":"53"},{"size":1257,"mtime":1615229848662,"results":"102","hashOfConfig":"53"},{"size":604,"mtime":1615229910294,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1u2h4y5",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"D:\\Device-Notification-Subsystem-Frontend\\src\\index.js",[],["212","213"],"D:\\Device-Notification-Subsystem-Frontend\\src\\i18n.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\utilities\\helpers.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\utilities\\constants.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\views\\Errors\\Page401.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\containers\\Full\\Full.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Header\\Header.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Footer\\Footer.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\store.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Breadcrumb\\Breadcrumb.js",["214"],"/*\r\nCopyright (c) 2018-2019 Qualcomm Technologies, Inc.\r\nAll rights reserved.\r\nRedistribution and use in source and binary forms, with or without modification, are permitted (subject to the limitations in the \r\ndisclaimer below) provided that the following conditions are met:\r\n    * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n    * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer \r\n      in the documentation and/or other materials provided with the distribution.\r\n    * Neither the name of Qualcomm Technologies, Inc. nor the names of its contributors may be used to endorse or promote \r\n      products derived from this software without specific prior written permission.\r\n    * The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use \r\n      this software in a product, an acknowledgment is required by displaying the trademark/log as per the details provided \r\n      here: https://www.qualcomm.com/documents/dirbs-logo-and-brand-guidelines\r\n    * Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.\r\n    * This notice may not be removed or altered from any source distribution.\r\nNO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY THIS LICENSE. THIS SOFTWARE IS PROVIDED \r\nBY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT \r\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO \r\nEVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \r\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; \r\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN \r\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS \r\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\nimport React from 'react';\r\nimport {Route, Link} from 'react-router-dom';\r\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\nimport routes from '../../routes';\r\nimport { Translation } from 'react-i18next';\r\n\r\n\r\nconst findRouteName = url => routes[url];\r\n\r\nconst getPaths = (pathname) => {\r\n  const paths = ['/'];\r\n\r\n  if (pathname === '/') return paths;\r\n\r\n  pathname.split('/').reduce((prev, curr, index) => {\r\n    const currPath = `${prev}/${curr}`;\r\n    paths.push(currPath);\r\n    return currPath;\r\n  });\r\n  return paths;\r\n};\r\n\r\nconst BreadcrumbsItem = ({match, ...rest}) => {\r\n  const routeName = findRouteName(match.url);\r\n  if (routeName) {\r\n    return (\r\n      <Translation ns=\"translations\">\r\n        {\r\n          (t, { i18n }) => (\r\n            match.isExact ?\r\n            (\r\n              <BreadcrumbItem active>{t(routeName)}</BreadcrumbItem>\r\n            ) :\r\n            (\r\n              <BreadcrumbItem>\r\n                <Link to={match.url || ''}>\r\n                  {t(routeName) === t('DashboardLink') ? t('home') : t(routeName)}\r\n                </Link>\r\n              </BreadcrumbItem>\r\n            )\r\n          )\r\n        }\r\n      </Translation>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst Breadcrumbs = ({location : {pathname}, match, ...rest}) => {\r\n  const paths = getPaths(pathname);\r\n  const items = paths.map((path, i) => <Route key={i++} path={path} component={BreadcrumbsItem}/>);\r\n  return (\r\n    <Breadcrumb>\r\n      {items}\r\n    </Breadcrumb>\r\n  );\r\n};\r\n\r\nexport default props => (\r\n  <div>\r\n    <Route path=\"/:path\" component={Breadcrumbs} {...props} />\r\n  </div>\r\n);\r\n","D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Sidebar\\Sidebar.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\actions\\authActions.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Header\\HeaderDropdown.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Header\\HeaderLanguage.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\routes.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Sidebar\\_nav.js",["215"],"/*\r\nCopyright (c) 2018-2019 Qualcomm Technologies, Inc.\r\nAll rights reserved.\r\nRedistribution and use in source and binary forms, with or without modification, are permitted (subject to the limitations in the \r\ndisclaimer below) provided that the following conditions are met:\r\n    * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n    * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer \r\n      in the documentation and/or other materials provided with the distribution.\r\n    * Neither the name of Qualcomm Technologies, Inc. nor the names of its contributors may be used to endorse or promote \r\n      products derived from this software without specific prior written permission.\r\n    * The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use \r\n      this software in a product, an acknowledgment is required by displaying the trademark/log as per the details provided \r\n      here: https://www.qualcomm.com/documents/dirbs-logo-and-brand-guidelines\r\n    * Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.\r\n    * This notice may not be removed or altered from any source distribution.\r\nNO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY THIS LICENSE. THIS SOFTWARE IS PROVIDED \r\nBY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT \r\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO \r\nEVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \r\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; \r\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN \r\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS \r\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\nexport default {\r\n  items: [\r\n    {\r\n      title: true,\r\n      name: \"mainNavigation\",\r\n      wrapper: {\r\n        // optional wrapper object\r\n        element: \"\", // required valid HTML5 element tag\r\n        attributes: {}, // optional valid JS object with JS API naming ex: { className: \"my-class\", style: { fontFamily: \"Verdana\" }, id: \"my-id\"}\r\n      },\r\n      class: \"\", // optional class names space delimited list for title item ex: \"text-center\"\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"dashboardLink\",\r\n      icon: \"fa fa-tachometer\",\r\n      url: \"/dashboard\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"CreateNotificationLink\",\r\n      icon: \"fa fa-envelope\",\r\n      url: \"/create-notification\",\r\n    },\r\n    \r\n    {\r\n      id: 3,\r\n      name: \"SearchRequestsLink\",\r\n      icon: \"fa fa-search\",\r\n      url: \"/search-requests\",\r\n    },\r\n\r\n\r\n  \r\n  ],\r\n};\r\n","D:\\Device-Notification-Subsystem-Frontend\\src\\actions\\types.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Form\\SwitchToggleButton.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Form\\RenderInput.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\actions\\SearchRequestsAction.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Form\\RenderDateRangePicker.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\components\\DataTable\\DataTableInfo.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\reducers\\index.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Loaders\\StepLoading.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\components\\SidebarMinimizer\\SidebarMinimizer.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\api\\SearchRequestService.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\reducers\\searchRequestReducer.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\reducers\\authReducer.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\views\\Dashboard\\Dashboard.js",["216"],"D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Loaders\\SimpleLoader.js",[],["217","218"],"D:\\Device-Notification-Subsystem-Frontend\\src\\reducers\\dashboardReducer.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\actions\\DashboardServicesAction.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\api\\DashboardServices.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Loaders\\TableLoader.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Form\\RenderSelect.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\components\\Form\\RenderTextarea.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\reducers\\campaignStatusReducer.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\actions\\CampaignStatusAction.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\views\\CampaignStatus\\CampaignStatus.js",["219"],"D:\\Device-Notification-Subsystem-Frontend\\src\\reducers\\operatorsReducer.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\actions\\operatorsAction.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\views\\SearchRequests\\SearchRequests.js",["220","221"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"react-dates/initialize\";\r\nimport \"react-dates/lib/css/_datepicker.css\";\r\nimport RenderDateRangePicker from \"../../components/Form/RenderDateRangePicker\";\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Input,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { animations } from \"react-animation\";\r\nimport { withFormik, Field } from \"formik\";\r\nimport renderInput from \"../../components/Form/RenderInput\";\r\nimport { updateTokenHOC, setParamsForAPI } from \"../../utilities/helpers\";\r\nimport { ITEMS_PER_PAGE, PAGE_LIMIT } from \"../../utilities/constants\";\r\nimport { getSMSList, getEmailList } from \"../../actions/SearchRequestsAction\";\r\n\r\nimport StepLoading from \"../../components/Loaders/StepLoading\";\r\nimport { connect } from \"react-redux\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport DataTableInfo from \"../../components/DataTable/DataTableInfo\";\r\nimport SearchFilters from \"./SearchFilters\";\r\nimport moment from \"moment\";\r\nimport SwitchToogleButton from \"../../components/Form/SwitchToggleButton\";\r\nimport i18n from \"i18next\";\r\nconst SearchForm = (props) => {\r\n  let delivered_at = useRef();\r\n  const handleReset = (e, val) => {\r\n    switch (val) {\r\n      case \"imei\":\r\n        props.setFieldValue(\"imei\", \"\");\r\n        props.delSearchQuery(props.currSearchQuery, val);\r\n        break;\r\n      case \"sms_email_to\":\r\n        props.setFieldValue(\"sms_email_to\", \"\");\r\n        props.delSearchQuery(props.currSearchQuery, val);\r\n        break;\r\n      case \"sms_email_from\":\r\n        props.setFieldValue(\"sms_email_from\", \"\");\r\n        props.delSearchQuery(props.currSearchQuery, val);\r\n        break;\r\n      case \"email_subject\":\r\n        props.setFieldValue(\"email_subject\", \"\");\r\n        props.delSearchQuery(props.currSearchQuery, val);\r\n        break;\r\n      case \"subsystem\":\r\n        props.setFieldValue(\"subsystem\", \"\");\r\n        props.delSearchQuery(props.currSearchQuery, val);\r\n        break;\r\n      case \"delivered_at\":\r\n        delivered_at.resetDate();\r\n        props.setFieldValue(\"delivered_at\", \"\");\r\n        props.delSearchQuery(props.currSearchQuery, val);\r\n        break;\r\n      case \"sms_email_content\":\r\n        props.setFieldValue(\"sms_email_content\", \"\");\r\n        props.delSearchQuery(props.currSearchQuery, val);\r\n        break;\r\n      case \"filename\":\r\n        props.setFieldValue(\"filename\", \"\");\r\n        props.delSearchQuery(props.currSearchQuery, val);\r\n        break;\r\n      case \"operator\":\r\n        props.setFieldValue(\"operator\", \"\");\r\n        props.delSearchQuery(props.currSearchQuery, val);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const handleResetForm = () => {\r\n    delivered_at.resetDate();\r\n    props.resetForm();\r\n    props.delSearchQuery(props.currSearchQuery, \"all\");\r\n  };\r\n  const {\r\n    values,\r\n    showFilters,\r\n    toggle,\r\n\r\n    errors,\r\n\r\n\r\n    isSubmitting,\r\n    handleSubmit,\r\n    setFieldValue,\r\n    setFieldTouched,\r\n   \r\n    dirty,\r\n    currSearchQuery,\r\n \r\n    SMSEmailToggle,\r\n  } = props;\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      {currSearchQuery.length > 0 && (\r\n        <div>\r\n          <div className=\"selected-filters-header\">\r\n            <Button\r\n              color=\"link\"\r\n              onClick={() => {\r\n                handleResetForm();\r\n              }}\r\n              disabled={!dirty || isSubmitting}\r\n            >\r\n              {i18n.t(\"clearAll\")}\r\n            </Button>\r\n          </div>\r\n          <SearchFilters filters={currSearchQuery} handleReset={handleReset} />\r\n          <hr />\r\n        </div>\r\n      )}\r\n      <Card\r\n        body\r\n        outline\r\n        className={errors[\"oneOfFields\"] ? \"mb-2 border-danger\" : \"mb-2\"}\r\n      >\r\n        <Row>\r\n          <Col xs={12} sm={6} md={4} xl={3}>\r\n            <Field\r\n              name={\"imei\"}\r\n              component={renderInput}\r\n              type=\"text\"\r\n              label={i18n.t(\"imei\")}\r\n              placeholder={i18n.t(\"imei\")}\r\n            />\r\n          </Col>\r\n          <Col xs={12} sm={6} md={4} xl={3}>\r\n            <Field\r\n              name={\"sms_email_to\"}\r\n              component={renderInput}\r\n              type=\"text\"\r\n              label={SMSEmailToggle ? i18n.t(\"smsto\") : i18n.t(\"emailto\")}\r\n              placeholder={SMSEmailToggle ?  i18n.t(\"smsto\") : i18n.t(\"emailto\")}\r\n            />\r\n          </Col>\r\n          <Col xs={12} sm={6} md={4} xl={3}>\r\n            <Field\r\n              name={\"sms_email_from\"}\r\n              component={renderInput}\r\n              type=\"text\"\r\n              label={SMSEmailToggle ?  i18n.t(\"smsfrom\") : i18n.t(\"emailfrom\")}\r\n              placeholder={SMSEmailToggle ? i18n.t(\"smsfrom\") : i18n.t(\"emailfrom\")}\r\n            />\r\n          </Col>\r\n          <Col xs={12} sm={6} md={4} xl={3}>\r\n            <Field\r\n              name=\"subsystem\"\r\n              component={renderInput}\r\n              type=\"text\"\r\n              label={i18n.t(\"subsystem\")}\r\n              placeholder={i18n.t(\"subsystem\")}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <div>\r\n          <div\r\n            className={toggle ? \"collapse show animated fadeIn\" : \"collapse\"}\r\n          >\r\n            <Row>\r\n              {SMSEmailToggle && (\r\n                <Col xs={12} sm={6} md={4} xl={3}>\r\n                  <Field\r\n                    name=\"operator\"\r\n                    component={renderInput}\r\n                    type=\"text\"\r\n                    label={i18n.t(\"operator\")}\r\n                    placeholder={i18n.t(\"operator\")}\r\n                  />\r\n                </Col>\r\n              )}\r\n              <Col xs={12} sm={6} md={4} xl={3}>\r\n                <FormGroup>\r\n                  <Label>{i18n.t(\"delivered_time\")}</Label>\r\n                  <RenderDateRangePicker\r\n                    name=\"delivered_at\"\r\n                    ref={(instance) => {\r\n                      delivered_at = instance;\r\n                    }}\r\n                    value={values.delivered_at}\r\n                    onChange={setFieldValue}\r\n                    onBlur={setFieldTouched}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col xs={12} sm={6} md={4} xl={3}>\r\n                <Field\r\n                  name=\"filename\"\r\n                  component={renderInput}\r\n                  type=\"text\"\r\n                  label={i18n.t(\"filename\")}\r\n                  placeholder={i18n.t(\"filename\")}\r\n                />\r\n              </Col>\r\n              <Col xs={12} sm={6} md={4} xl={3}>\r\n                <Field\r\n                  name={\"sms_email_content\"}\r\n                  component={renderInput}\r\n                  type=\"text\"\r\n                  label={SMSEmailToggle ? i18n.t(\"smscontent\") : i18n.t(\"emailcontent\")}\r\n                  placeholder={SMSEmailToggle ? i18n.t(\"smscontent\") : i18n.t(\"emailcontent\")}\r\n                />\r\n              </Col>\r\n              {!SMSEmailToggle && (\r\n                <Col xs={12} sm={6} md={4} xl={3}>\r\n                  <Field\r\n                    name=\"email_subject\"\r\n                    component={renderInput}\r\n                    type=\"text\"\r\n                    label={i18n.t(\"emailsubject\")}\r\n                    placeholder={i18n.t(\"emailsubject\")}\r\n                  />\r\n                </Col>\r\n              )}\r\n            </Row>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n      <Field\r\n        name=\"oneOfFields\"\r\n        component={({\r\n          field, // { name, value, onChange, onBlur }\r\n          form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n          ...props\r\n        }) => (\r\n          <div>\r\n            {\" \"}\r\n            {errors[\"oneOfFields\"] && (\r\n              <span className=\"invalid-feedback\" style={{ display: \"block\" }}>\r\n                * {errors[field.name]}\r\n              </span>\r\n            )}{\" \"}\r\n          </div>\r\n        )}\r\n      />\r\n      <Row className=\"justify-content-end\">\r\n        <Col xs={12} sm={6} md={4} xl={3}>\r\n          <FormGroup>\r\n            <Button color=\"default\" block onClick={showFilters}>\r\n              {toggle ? `${i18n.t(\"hidefilters\")}` : `${i18n.t(\"showfilters\")}`}\r\n            </Button>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col xs={12} sm={12} md={4} xl={3}>\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\" block>\r\n              {i18n.t(\"searchFilters\")}\r\n            </Button>\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst MyEnhancedForm = withFormik({\r\n  mapPropsToValues: (props) => ({\r\n    sms_email_to: \"\",\r\n    sms_email_from: \"\",\r\n    subsystem: \"\",\r\n    operator: \"\",\r\n    filename: \"\",\r\n    delivered_at: \"\",\r\n    email_subject: \"\",\r\n    imei: \"\",\r\n  }),\r\n  // Custom sync validation\r\n  validate: (values) => {\r\n    let errors = {};\r\n\r\n    if (\r\n      !values.sms_email_to &&\r\n      !values.sms_email_from &&\r\n      !values.subsystem &&\r\n      !values.operator &&\r\n      !values.filename &&\r\n      !values.email_subject &&\r\n      !values.delivered_at &&\r\n      !values.operator && \r\n      !values.imei &&\r\n      !values.sms_email_content\r\n    ) {\r\n      errors.oneOfFields = i18n.t(\"validation.oneOfTheAboveFieldsIsRequired\");\r\n    }\r\n\r\n    // console.log(errors);\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, bag) => {\r\n    bag.setSubmitting(false);\r\n    bag.props.callServer(prepareAPIRequest(values, bag.props.SMSEmailToggle));\r\n    bag.props.searchQuery(values);\r\n  },\r\n\r\n  displayName: \"SearchForm\", // helps with React DevTools\r\n})(SearchForm);\r\n\r\nconst prepareAPIRequest = (value, checked) => {\r\n  const formData = new FormData();\r\n  switch (checked) {\r\n    case false:\r\n      formData.email_from = value.sms_email_from;\r\n      formData.email_to = value.sms_email_to;\r\n      formData.subsystem = value.subsystem;\r\n      formData.operator = value.operator;\r\n      formData.filename = value.filename;\r\n      formData.email_delivered = value.delivered_at;\r\n      formData.email_content = value.sms_email_content;\r\n      formData.email_subject = value.email_subject;\r\n      formData.imei = value.imei;\r\n\r\n      break;\r\n    case true:\r\n      formData.sms_from = value.sms_email_from;\r\n      formData.subsystem = value.subsystem;\r\n      formData.sms_to = value.sms_email_to;\r\n      formData.operator = value.operator;\r\n      formData.filename = value.filename;\r\n      formData.sms_delivered = value.delivered_at;\r\n      formData.sms_content = value.sms_email_content;\r\n      formData.imei = value.imei;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return formData;\r\n};\r\n\r\nconst SearchRequests = (props) => {\r\n  const [showAllFilters, setShowAllFilters] = useState(false);\r\n  const [showSMSEmailFilters, setShowSMSEmailFilters] = useState(true);\r\n  const [searchQuery, setSearchQuery] = useState({});\r\n  const [currSearchQuery, setCurrSearchQuery] = useState([]);\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [start, setStart] = useState(0);\r\n  const [totalCases, setTotalCases] = useState(0);\r\n  const [activePage, setActivePage] = useState(0);\r\n  const [apiFetched, setApiFetched] = useState(false);\r\n\r\n  const [limit, setLimit] = useState(PAGE_LIMIT);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"scroll\", handlePagination);\r\n    return () => {\r\n      document.removeEventListener(\"scroll\", handlePagination);\r\n  \r\n    };\r\n  }, []);\r\n  React.useLayoutEffect(() => {\r\n    if (!props.data.error && !props.data.loading) {\r\n      setApiFetched(true);\r\n      setData(props.data.data.Result);\r\n      setTotalCases(props.data.count);\r\n      setLoading(props.loading);\r\n    }\r\n  }, [\r\n    props.data.error,\r\n    props.data.loading,\r\n    props.data.data.Result,\r\n    props.data.count,\r\n    props.loading,\r\n  ]);\r\n  const isBottom = (el) => {\r\n    return el.getBoundingClientRect().bottom - 100 <= window.innerHeight;\r\n  };\r\n  const handlePagination = () => {\r\n    const wrappedElement = document.getElementById(\"root\");\r\n    if (isBottom(wrappedElement)) {\r\n      document.body.classList.remove(\"pagination-fixed\");\r\n    } else {\r\n      document.body.classList.add(\"pagination-fixed\");\r\n    }\r\n  };\r\n  const handlePageClick = (page,limitChange) => {\r\n    let a1 = 1;\r\n    let start = a1 + limit * (page - 1)-1;\r\n    setStart(start);\r\n    setLoading(true);\r\n    setActivePage(page);\r\n    let postSearchData = setParamsForAPI(showSMSEmailFilters, searchQuery);\r\n    if (showSMSEmailFilters === true) {\r\n      updateTokenHOC(\r\n        props.getSMSList,\r\n        props.kc,\r\n        prepareGetBrandsParams(start, limitChange===undefined ? limit : limitChange, postSearchData)\r\n      );\r\n    } else {\r\n      updateTokenHOC(\r\n        props.getEmailList,\r\n        props.kc,\r\n        prepareGetBrandsParams(start, limitChange===undefined ? limit : limitChange, postSearchData)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleLimitChange = (e) => {\r\n    e.preventDefault();\r\n    let limit = parseInt(e.target.value);\r\n    let currentPage = Math.ceil((start+ 1) / limit);\r\n    // console.log(\"current Page\",currentPage);\r\n    // console.log(\"limitchange\",limitChange);\r\n    setLimit(limit)\r\n\r\n    handlePageClick(currentPage,limit);\r\n\r\n    // setActivePage(currentPage);\r\n    let postSearchData = setParamsForAPI(showSMSEmailFilters, searchQuery);\r\n    // if (showSMSEmailFilters === true) {\r\n    //   updateTokenHOC(\r\n    //     props.getSMSList,\r\n    //     props.kc,\r\n    //     prepareGetBrandsParams(start, limit, postSearchData)\r\n    //   );\r\n    // } else {\r\n    //   updateTokenHOC(\r\n    //     props.getEmailList,\r\n    //     props.kc,\r\n    //     prepareGetBrandsParams(start, limit, postSearchData)\r\n    //   );\r\n    // }\r\n  };\r\n \r\n  const handleShowSMSEmail = () => {\r\n    setShowSMSEmailFilters(!showSMSEmailFilters);\r\n  };\r\n  const handleShowFilters = () => {\r\n    setShowAllFilters(!showAllFilters);\r\n  };\r\n  const saveSearchQuery = (params) => {\r\n    setSearchQuery(params);\r\n    setStart(0);\r\n    setActivePage(1);\r\n    setApiFetched(false);\r\n    setLoading(true);\r\n    setData(null);\r\n    let postSearchData = setParamsForAPI(showSMSEmailFilters, params);\r\n    if (showSMSEmailFilters === true) {\r\n      updateTokenHOC(\r\n        props.getSMSList,\r\n        props.kc,\r\n        prepareGetBrandsParams(start, limit, postSearchData)\r\n      );\r\n    } else {\r\n      updateTokenHOC(\r\n        props.getEmailList,\r\n        props.kc,\r\n        prepareGetBrandsParams(start, limit, postSearchData)\r\n      );\r\n    }\r\n  };\r\n\r\n  const prepareGetBrandsParams = (start, limit, search) => {\r\n    let params = {\r\n      search: search,\r\n      start: start,\r\n      limit: limit,\r\n    };\r\n    return params;\r\n  };\r\n\r\n  const setSearchQueryInHeader = (values) => {\r\n    let query = [];\r\n    Object.keys(values).map((key) => {\r\n      switch (key) {\r\n        case \"imei\":\r\n          if (values[key]) {\r\n            query.push({ filter: key, filterName: i18n.t(\"imei\"), value: values[key] });\r\n          }\r\n          break;\r\n        case \"sms_email_to\":\r\n          if (values[key]) {\r\n            let filterName = \"\";\r\n            showSMSEmailFilters\r\n              ? (filterName += i18n.t(\"smsto\"))\r\n              : (filterName += i18n.t(\"emailto\"));\r\n            query.push({\r\n              filter: key,\r\n              filterName: filterName,\r\n              value: values[key],\r\n            });\r\n          }\r\n          break;\r\n        case \"email_subject\":\r\n          if (values[key]) {\r\n            query.push({\r\n              filter: key,\r\n              filterName: i18n.t(\"emailsubject\"),\r\n              value: values[key],\r\n            });\r\n          }\r\n          break;\r\n        case \"sms_email_content\":\r\n          if (values[key]) {\r\n            let filterName = \"\";\r\n            showSMSEmailFilters\r\n              ? (filterName += i18n.t(\"smscontent\"))\r\n              : (filterName += i18n.t(\"emailcontent\"));\r\n            query.push({\r\n              filter: key,\r\n              filterName: filterName,\r\n              value: values[key],\r\n            });\r\n          }\r\n          break;\r\n        case \"delivered_at\":\r\n          if (values[key]) {\r\n            let filterName = \"\";\r\n            showSMSEmailFilters\r\n              ? (filterName += i18n.t(\"smsdelivered\"))\r\n              : (filterName += i18n.t(\"emaildelivered\"));\r\n            query.push({ filter: key, filterName: filterName, value: values[key] });\r\n          }\r\n          break;\r\n        case \"filename\":\r\n          if (values[key]) {\r\n            query.push({\r\n              filter: key,\r\n              filterName: i18n.t(\"filename\"),\r\n              value: values[key],\r\n            });\r\n          }\r\n          break;\r\n        case \"operator\":\r\n          if (values[key]) {\r\n            query.push({\r\n              filter: key,\r\n              filterName: i18n.t(\"operator\"),\r\n              value: values[key],\r\n            });\r\n          }\r\n          break;\r\n        case \"subsystem\":\r\n          if (values[key]) {\r\n            query.push({\r\n              filter: key,\r\n              filterName: i18n.t(\"subsystem\"),\r\n              value: values[key],\r\n            });\r\n          }\r\n          break;\r\n        case \"sms_email_from\":\r\n          if (values[key]) {\r\n            let filterName = \"\";\r\n            showSMSEmailFilters\r\n              ? (filterName += i18n.t(\"smsfrom\"))\r\n              : (filterName += i18n.t(\"emailfrom\"));\r\n            query.push({\r\n              filter: key,\r\n              filterName: filterName,\r\n              value: values[key],\r\n            });\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      return \"\";\r\n    });\r\n    setCurrSearchQuery(query);\r\n  };\r\n  const delSearchQuery = (filters, filter) => {\r\n    let searchQueryData = searchQuery;\r\n    if (filter === \"all\") {\r\n      setCurrSearchQuery([]);\r\n      setSearchQuery({});\r\n      setData(null);\r\n    } else {\r\n      let query = filters.filter((el) => {\r\n        return el.filter !== filter;\r\n      });\r\n      delete searchQueryData[filter];\r\n      setSearchQuery(searchQueryData);\r\n      setCurrSearchQuery(query);\r\n    }\r\n    if (currSearchQuery.length <= 0) {\r\n      setData(null);\r\n    }\r\n  };\r\n\r\n  const tabeleRowPaginationFunct = () => {\r\n    if (data !== null && data.length > 0 && totalCases > 0) {\r\n      let search = data.map((searched_request) => (\r\n        <tr key={searched_request.pk}>\r\n          <td data-label={\"pk\"}>{searched_request.pk}</td>\r\n          <td data-label=\"IMEIs\">{searched_request.imei}</td>\r\n          <td data-label=\"IMEIs\">{searched_request.filename ? searched_request.filename : \"N/A\" }</td>\r\n          {showSMSEmailFilters && (\r\n            <td data-label={\"operator\"}>{searched_request.operator}</td>\r\n          )}\r\n          <td data-label={\"subsystem\"}>{searched_request.subsystem}</td>\r\n          <td data-label={showSMSEmailFilters ? \"sms to\" : \"email to\"}>\r\n            {showSMSEmailFilters\r\n              ? searched_request.sms_to\r\n              : searched_request.email_to}\r\n          </td>\r\n          <td data-label={showSMSEmailFilters ? \"sms from\" : \"email from\"}>\r\n            {showSMSEmailFilters\r\n              ? searched_request.sms_from\r\n              : searched_request.email_from}\r\n          </td>\r\n          <td\r\n            data-label={\r\n              showSMSEmailFilters ? \"sms delivered\" : \"email delivered\"\r\n            }\r\n          >\r\n            {showSMSEmailFilters\r\n              ? moment(searched_request.sms_delivered).format(\r\n                  \"HH:mm DD/MM/YYYY\"\r\n                )\r\n              : moment(searched_request.email_delivered).format(\r\n                  \"HH:mm DD/MM/YYYY\"\r\n                )}\r\n          </td>\r\n          {!showSMSEmailFilters && (\r\n            <td data-label={\"email subject\"}>\r\n              {searched_request.email_subject}\r\n            </td>\r\n          )}\r\n          <td\r\n            data-label={showSMSEmailFilters ? \"sms content\" : \"email content\"}\r\n          >\r\n            {showSMSEmailFilters\r\n              ? searched_request.sms_content\r\n              : searched_request.email_content}\r\n          </td>\r\n        </tr>\r\n      ));\r\n      return search;\r\n    }\r\n  };\r\n  let options = ITEMS_PER_PAGE;\r\n  const itemOptions = options.map((item) => {\r\n    return (\r\n      <option key={item.value} value={item.value}>\r\n        {item.label}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n\r\n        <div className=\"search-box animated fadeIn\">\r\n          <div className=\"filters\">\r\n            <Card outline color=\"primary\">\r\n              <CardHeader>\r\n                <span className=\"float-left mt-1\">\r\n                  <b>\r\n                    {showSMSEmailFilters ? i18n.t(\"sms\") : i18n.t(\"email\")}{\" \"}\r\n                    {i18n.t(\"searchFilters\")}\r\n                  </b>\r\n                </span>\r\n                <div className=\"float-right\">\r\n                  <SwitchToogleButton\r\n                    checked={showSMSEmailFilters}\r\n                    handleChange={handleShowSMSEmail}\r\n                    onLabel={i18n.t(\"sms\")}\r\n                    offLabel={i18n.t(\"email\")}\r\n                    disable={currSearchQuery.length>0 ? true : false }\r\n                  />\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody\r\n                style={\r\n                  showSMSEmailFilters\r\n                    ? { animation: animations.slideIn }\r\n                    : { animation: animations.fadeInUp }\r\n                }\r\n              >\r\n                <MyEnhancedForm\r\n                  showFilters={handleShowFilters}\r\n                  toggle={showAllFilters}\r\n                  SMSEmailToggle={showSMSEmailFilters}\r\n                  delSearchQuery={delSearchQuery}\r\n                  currSearchQuery={currSearchQuery}\r\n                  // searchQuery={searchQuery}\r\n                  callServer={saveSearchQuery}\r\n                  searchQuery={setSearchQueryInHeader}\r\n\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n          <ul className=\"listbox\">\r\n            {loading && currSearchQuery.length > 0 ? (\r\n              <div className=\"text-center mt-2\">\r\n                <StepLoading />\r\n              </div>\r\n            ) :\r\n            data !== null &&\r\n              data.length > 0 &&\r\n              totalCases > 0 &&\r\n              currSearchQuery.length > 0 ? (\r\n              <div>\r\n                <Card className=\"mb-1\" style={{ zIndex: -1 }}>\r\n                  <CardHeader className=\"border-bottom-0\">\r\n                    <b className=\"text-primary\">\r\n                      {totalCases > 1\r\n                        ? `${totalCases} ${i18n.t('RequestsFound')}`\r\n                        : `${totalCases} ${i18n.t('RequestFound')}`}\r\n                    </b>\r\n                  </CardHeader>\r\n                </Card>\r\n                <Table responsive bordered size=\"sm\" className=\"mt-2\">\r\n                  <thead className=\"thead-light\">\r\n                    <tr>\r\n                      <th>{i18n.t('id')}</th>\r\n                      <th>{i18n.t('imei')}</th>\r\n                      <th>{i18n.t('Filename')}</th>\r\n                      {showSMSEmailFilters && <th>{i18n.t('operator')}</th>}\r\n                      <th>{i18n.t('subsystem')}</th>\r\n                      <th>{showSMSEmailFilters ? i18n.t('smsto') : i18n.t('emailto')}</th>\r\n                      <th>{showSMSEmailFilters ? i18n.t('smsfrom') : i18n.t('emailfrom')}</th>\r\n                      <th>\r\n                        {showSMSEmailFilters\r\n                          ? i18n.t('smsdelivered')\r\n                          : i18n.t('emaildelivered')}\r\n                      </th>\r\n                      {!showSMSEmailFilters && <th>{i18n.t('emailsubject')}</th>}\r\n                      <th>\r\n                        {showSMSEmailFilters ? i18n.t('smscontent') : i18n.t('emailcontent')}\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>{tabeleRowPaginationFunct()}</tbody>\r\n                </Table>\r\n              </div>\r\n            ) : apiFetched && currSearchQuery.length > 0 ? (\r\n              <Card className=\"mb-1\" style={{ zIndex: -1 }}>\r\n                <CardHeader className=\"border-bottom-0\">\r\n                  <b className=\"text-danger\">{i18n.t(\"noRequestFound\")}</b>\r\n                </CardHeader>\r\n              </Card>\r\n            ) : null}\r\n          </ul>\r\n          {data !== null &&\r\n            data.length > 0 &&\r\n            totalCases > 0 &&\r\n            totalCases > PAGE_LIMIT &&\r\n            !loading &&\r\n            currSearchQuery.length > 0 && (\r\n              <article className=\"data-footer\">\r\n                <Pagination\r\n                  pageRangeDisplayed={\r\n                    window.matchMedia(\"(max-width: 767px)\").matches ? 4 : 10\r\n                  }\r\n                  activePage={activePage}\r\n                  itemsCountPerPage={limit}\r\n                  totalItemsCount={totalCases}\r\n                  onChange={handlePageClick}\r\n                  innerClass=\"pagination\"\r\n                />\r\n                <div className=\"hand-limit\">\r\n                  <Label>{i18n.t(\"show\")}</Label>\r\n                  <div className=\"selectbox\">\r\n                    <Input\r\n                      value={limit}\r\n                      onChange={(e) => {\r\n                        handleLimitChange(e);\r\n                      }}\r\n                      type=\"select\"\r\n                      name=\"select\"\r\n                    >\r\n                      {itemOptions}\r\n                    </Input>\r\n                  </div>\r\n                  <Label>{\"requests\"}</Label>\r\n                </div>\r\n                <div className=\"start-toend\">\r\n                  <DataTableInfo\r\n                    start={start}\r\n                    limit={limit}\r\n                    total={totalCases}\r\n                    itemType={\"requests\"}\r\n                  />\r\n                </div>\r\n              </article>\r\n            )}\r\n        </div>\r\n    \r\n    </>\r\n  );\r\n};\r\n\r\nconst mapPropsToState = (state) => ({\r\n  data: state.data,\r\n});\r\n\r\nexport default connect(mapPropsToState, { getSMSList, getEmailList })(\r\n  SearchRequests\r\n);\r\n","D:\\Device-Notification-Subsystem-Frontend\\src\\views\\SearchRequests\\SearchFilters.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\views\\CreateNotification\\CreateNotification.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\views\\CreateNotification\\SMS\\SMS.js",["222"],"import React, { useEffect } from \"react\";\r\nimport { Row, Col, Button, Form, Card, CardHeader, CardBody } from \"reactstrap\";\r\nimport i18n from \"i18next\";\r\nimport { withFormik, Field } from \"formik\";\r\nimport { animations } from \"react-animation\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  updateTokenHOC,\r\n  SweetAlert,\r\n  errors,\r\n  getAuthHeader,\r\n} from \"./../../../utilities/helpers\";\r\nimport { getOperatorsList } from \"./../../../actions/operatorsAction\";\r\nimport { getExtension, getSMSCalcluator } from \"./../../../utilities/helpers\";\r\nimport renderInput from \"../../../components/Form/RenderInput\";\r\nimport RenderSelect from \"../../../components/Form/RenderSelect\";\r\nimport renderTextarea from \"../../../components/Form/RenderTextarea\";\r\nimport {\r\n  postSingleSMS,\r\n  postCampaignSMS,\r\n} from \"../../../api/createNotificationService\";\r\n\r\nconst SingleBulkSMSInputForm = (props) => {\r\n  const {\r\n    toggle,\r\n    handleSubmit,\r\n    setFieldValue,\r\n    values,\r\n    errors,\r\n    touched,\r\n    operaters,\r\n    setFieldTouched,\r\n  } = props;\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Row>\r\n        <Col md={12} sm={12}>\r\n          <Card className=\"d-block\" outline color=\"primary\">\r\n            <CardHeader>\r\n              <b>\r\n                {\" \"}\r\n                {toggle ? i18n.t(\"single\") : i18n.t(\"bulk\")} {i18n.t(\"sms\")}{\" \"}\r\n              </b>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Row>\r\n                <Col>\r\n                  <div\r\n                    style={\r\n                      toggle\r\n                        ? { animation: animations.slideIn }\r\n                        : { animation: animations.fadeInUp }\r\n                    }\r\n                    className=\"d-block\"\r\n                  >\r\n                    <Col>\r\n                      <Row>\r\n                        {toggle && (\r\n                          <Col xs={12} sm={12}>\r\n                            <Field\r\n                              requiredStar\r\n                              name=\"imei\"\r\n                              component={renderInput}\r\n                              type=\"text\"\r\n                              label={i18n.t(\"imei\")}\r\n                              placeholder={i18n.t(\"imei\")}\r\n                            />\r\n                          </Col>\r\n                        )}\r\n                        {!toggle && (\r\n                          <Col xs={12} sm={12}>\r\n                            <RenderSelect\r\n                              value={values.mode}\r\n                              onChange={setFieldValue}\r\n                              options={[\r\n                                { label: \"File\", value: \"File\" },\r\n                                { label: \"DB\", value: \"DB\" },\r\n                              ]}\r\n                              onBlur={setFieldTouched}\r\n                              error={errors.mode}\r\n                              touched={touched.mode}\r\n                              fieldName=\"mode\"\r\n                              label={i18n.t(\"Mode\")}\r\n                              placeholder={i18n.t(\"Select Option\")}\r\n                              requiredStar\r\n                              stayOpen={true}\r\n                              multi={false}\r\n                            />\r\n                            <br />\r\n                          </Col>\r\n                        )}\r\n                        {!toggle && (\r\n                          <Col xs={12} sm={12}>\r\n                            <Field\r\n                              requiredStar\r\n                              name=\"sms_rate\"\r\n                              component={renderInput}\r\n                              type=\"text\"\r\n                              label={i18n.t(\"smsrate\")}\r\n                              placeholder={i18n.t(\"smsrate\")}\r\n                            />\r\n                          </Col>\r\n                        )}\r\n\r\n                        <Col xs={12} sm={12}>\r\n                          <RenderSelect\r\n                            value={values.operator}\r\n                            onChange={setFieldValue}\r\n                            options={operaters}\r\n                            onBlur={setFieldTouched}\r\n                            error={errors.operator}\r\n                            touched={touched.operator}\r\n                            fieldName=\"operator\"\r\n                            label={i18n.t(\"operator\")}\r\n                            placeholder={i18n.t(\"Select Option\")}\r\n                            requiredStar\r\n                            stayOpen={true}\r\n                            multi={false}\r\n                          />\r\n                          <br />\r\n                        </Col>\r\n\r\n                        <Col xs={12} sm={12}>\r\n                          <Field\r\n                            requiredStar\r\n                            name=\"sms_from\"\r\n                            component={renderInput}\r\n                            type=\"text\"\r\n                            label={i18n.t(\"smsfrom\")}\r\n                            placeholder={i18n.t(\"smsfrom\")}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    {toggle && (\r\n                        <Col xs={12} sm={12}>\r\n                          <Field\r\n                            requiredStar\r\n                            name=\"sms_to\"\r\n                            component={renderInput}\r\n                            type=\"text\"\r\n                            label={i18n.t(\"smsto\")}\r\n                            placeholder={i18n.t(\"smsto\")}\r\n                          />\r\n                        </Col>\r\n                      )}\r\n                      {!toggle && !(values.mode.value === \"DB\") && (\r\n                        <Col xs={12} sm={12}>\r\n                          <Field\r\n                            requiredStar\r\n                            name=\"file\"\r\n                            component={renderInput}\r\n                            type=\"text\"\r\n                            label={i18n.t(\"file\")}\r\n                            placeholder={i18n.t(\"file\")}\r\n                          />\r\n                        </Col>\r\n                      )}\r\n                  </div>\r\n                </Col>\r\n                <Col>\r\n                  <div\r\n                    style={\r\n                      toggle\r\n                        ? { animation: animations.slideIn }\r\n                        : { animation: animations.fadeInUp }\r\n                    }\r\n                  >\r\n                    <Row>\r\n\r\n\r\n                      <Col xs={12} sm={12}>\r\n                        <Field\r\n                          requiredStar\r\n                          name=\"sms_content\"\r\n                          component={renderTextarea}\r\n                          type=\"textarea\"\r\n                          label={i18n.t(\"smscontent\")}\r\n                          placeholder={i18n.t(\"smscontent\")}\r\n                          maxLength={1600}\r\n                        />\r\n                        <span className=\"float-right text-dark mt-0\">\r\n                          {\" \"}\r\n                          {getSMSCalcluator(values.sms_content)}\r\n                        </span>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"text-right mt-1\">\r\n                  <Button\r\n                    outline\r\n                    color=\"primary\"\r\n                    className=\"float-right mr-3\"\r\n                    type=\"submit\"\r\n                  >\r\n                    {i18n.t(\"submit\")}\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EnhancedSingleBulkForm = withFormik({\r\n  mapPropsToValues: () => ({\r\n    sms_to: \"\",\r\n    sms_from: \"\",\r\n    imei: \"\",\r\n    subsystem: \"\",\r\n    operator: \"\",\r\n    sms_rate: \"\",\r\n    sms_content: \"\",\r\n    mode: \"\",\r\n    file: \"\",\r\n  }),\r\n  /**\r\n   * Formik validations\r\n   * @param values\r\n   */\r\n  validate: (values, props) => {\r\n    //single email validation\r\n    if (props.toggle) {\r\n      let errors = {};\r\n      if (!values.imei) {\r\n        errors.imei = i18n.t(\"validation.thisFieldIsRequired\");\r\n      } else if (!/^(?=.[A-F]*)(?=.[0-9]*)[A-F0-9]{14,16}$/.test(values.imei)) {\r\n        errors.imei = i18n.t(\"validation.imeiMustContain\");\r\n        // errors.imei = \"validation.imeiMustContain\";\r\n      }\r\n      if (!values.sms_from) {\r\n        errors.sms_from = i18n.t(\"validation.thisFieldIsRequired\");\r\n      }\r\n      if (!values.sms_to) {\r\n        errors.sms_to = i18n.t(\"validation.thisFieldIsRequired\");\r\n      } else if (\r\n        !/^((\\+92)|(92))-{0,1}\\d{3}-{0,1}\\d{7}$|^\\d{11}$|^\\d{4}-\\d{7}$/.test(\r\n          values.sms_to\r\n        )\r\n      ) {\r\n        errors.sms_to = i18n.t(\r\n          \"validation.invalidFormatValidFormatIs3001234567891\"\r\n        );\r\n      }\r\n\r\n      if (!values.operator) {\r\n        errors.operator = i18n.t(\"validation.thisFieldIsRequired\");\r\n      }\r\n      if (!values.sms_content) {\r\n        errors.sms_content = i18n.t(\"validation.thisFieldIsRequired\");\r\n      }\r\n      return errors;\r\n    }\r\n    //bulk validation\r\n    else {\r\n      let errors = {};\r\n      if (!values.mode) {\r\n        errors.mode = i18n.t(\"validation.thisFieldIsRequired\");\r\n      }\r\n      if (!values.sms_from) {\r\n        errors.sms_from = i18n.t(\"validation.thisFieldIsRequired\");\r\n      }\r\n      if (!values.operator) {\r\n        errors.operator = i18n.t(\"validation.thisFieldIsRequired\");\r\n      }\r\n      if (!values.sms_content) {\r\n        errors.sms_content = i18n.t(\"validation.thisFieldIsRequired\");\r\n      }\r\n      if (!values.sms_rate) {\r\n        errors.sms_rate = i18n.t(\"validation.thisFieldIsRequired\");\r\n      } else if (isNaN(values.sms_rate)) {\r\n        errors.sms_rate = i18n.t(\"Enter Number Value\");\r\n      }\r\n      if (values.mode.value === \"File\") {\r\n        if (!values.file) {\r\n          errors.file = i18n.t(\"validation.thisFieldIsRequired\");\r\n        } else if (\r\n          getExtension(values.file) !== \"csv\" &&\r\n          getExtension(values.file) !== \"txt\"\r\n        ) {\r\n          errors.file = i18n.t(\"validation.invalideFileExtension\");\r\n        }\r\n      }\r\n      return errors;\r\n    }\r\n  },\r\n  /**\r\n   * Formik submit function\r\n   * @param values\r\n   * @param bag\r\n   */\r\n\r\n  handleSubmit: (values, bag) => {\r\n    if (bag.props.toggle) {\r\n      let response = UpdatedTokenHOC(\r\n        bag.props.postSingleSMS,\r\n        prepareAPIRequest(bag.props.toggle, values),\r\n        bag\r\n      );\r\n      response\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            let params = {\r\n              icon: \"success\",\r\n              title: \"Success\",\r\n              message: res.data.message,\r\n              type: \"Success\",\r\n            };\r\n            SweetAlert(params);\r\n            bag.resetForm();\r\n          }\r\n        })\r\n        .catch((err) => errors(this, err));\r\n    } else {\r\n      let response = UpdatedTokenHOC(\r\n        bag.props.postCampaignSMS,\r\n        prepareAPIRequest(bag.props.toggle, values),\r\n        bag\r\n      );\r\n      response\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            let params = {\r\n              icon: \"success\",\r\n              title: \"Success\",\r\n              message: res.data.message,\r\n              type: \"Success\",\r\n            };\r\n            SweetAlert(params);\r\n            bag.resetForm();\r\n          }\r\n        })\r\n        .catch((err) => errors(this, err));\r\n    }\r\n  },\r\n  displayName: \"SingleBulkSMSInputForm\", // helps with React DevTools\r\n})(SingleBulkSMSInputForm);\r\n//prepareAPIRequest set server data\r\n\r\nconst UpdatedTokenHOC = (callingFunc, request, bag) => {\r\n  let config = null;\r\n  if (bag.props.kc.isTokenExpired(0)) {\r\n    bag.props.kc\r\n      .updateToken(0)\r\n      .success(() => {\r\n        localStorage.setItem(\"token\", bag.props.kc.token);\r\n        config = {\r\n          headers: getAuthHeader(bag.props.kc.token),\r\n        };\r\n        callingFunc(config, request);\r\n      })\r\n      .error(() => bag.props.kc.logout());\r\n  } else {\r\n    config = {\r\n      headers: getAuthHeader(),\r\n    };\r\n\r\n    return callingFunc(config, request);\r\n  }\r\n};\r\nconst prepareAPIRequest = (toggle, values) => {\r\n  if (toggle) {\r\n    let sendingData = {};\r\n    sendingData.imei = values.imei;\r\n    sendingData.sms_to = values.sms_to;\r\n    sendingData.sms_from = values.sms_from;\r\n    sendingData.subsystem = \"Ops-DashBoard\";\r\n    sendingData.operator = values.operator.value;\r\n    sendingData.sms_content = values.sms_content;\r\n\r\n    return sendingData;\r\n  } else {\r\n    console.log(values);\r\n    let sendingData = {};\r\n    sendingData.sms_from = values.sms_from;\r\n    sendingData.sms_content = values.sms_content;\r\n    sendingData.operator = values.operator.value;\r\n    sendingData.sms_rate = parseInt(values.sms_rate);\r\n    sendingData.subsystem = \"Ops-DashBoard\";\r\n    sendingData.mode = values.mode.value;\r\n    if (values.mode.value === \"File\") {\r\n      sendingData.file = values.file;\r\n    }\r\n    return sendingData;\r\n  }\r\n};\r\n\r\nconst SMS = (props) => {\r\n  useEffect(() => {\r\n    updateTokenHOC(props.getOperatorsList, props.kc);\r\n  }, []);\r\n  const setOperatorsParams = (data) => {\r\n    if (data.error === false) {\r\n      let operators = [];\r\n      for (const key of Object.values(data.operators.mnos)) {\r\n        operators.push({ value: key, label: key });\r\n      }\r\n      return operators;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <EnhancedSingleBulkForm\r\n        toggle={props.toggle}\r\n        operaters={setOperatorsParams(props.operators)}\r\n        postSingleSMS={postSingleSMS}\r\n        postCampaignSMS={postCampaignSMS}\r\n        kc={props.kc}\r\n      />\r\n    </>\r\n  );\r\n};\r\nconst mapPropsToState = (state) => ({\r\n  operators: state.operators,\r\n});\r\nexport default connect(mapPropsToState, {\r\n  postSingleSMS,\r\n  getOperatorsList,\r\n  postCampaignSMS,\r\n})(SMS);\r\n","D:\\Device-Notification-Subsystem-Frontend\\src\\views\\CreateNotification\\Email\\Email.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\api\\createNotificationService.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\api\\operatorsServices.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\api\\campaignStatusServices.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\actions\\dashboardServicesAction.js",[],"D:\\Device-Notification-Subsystem-Frontend\\src\\actions\\campaignStatusAction.js",[],{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":83,"column":1,"nodeType":"229","endLine":87,"endColumn":3},{"ruleId":"227","severity":1,"message":"230","line":25,"column":1,"nodeType":"229","endLine":60,"endColumn":3},{"ruleId":"231","severity":1,"message":"232","line":32,"column":6,"nodeType":"233","endLine":32,"endColumn":99,"suggestions":"234"},{"ruleId":"223","replacedBy":"235"},{"ruleId":"225","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":39,"column":28,"nodeType":"239","messageId":"240","endLine":39,"endColumn":30},{"ruleId":"231","severity":1,"message":"241","line":360,"column":6,"nodeType":"233","endLine":360,"endColumn":8,"suggestions":"242"},{"ruleId":"243","severity":1,"message":"244","line":419,"column":9,"nodeType":"245","messageId":"246","endLine":419,"endColumn":23},{"ruleId":"231","severity":1,"message":"247","line":397,"column":6,"nodeType":"233","endLine":397,"endColumn":8,"suggestions":"248"},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'start'. Either include it or remove the dependency array.","ArrayExpression",["251"],["249"],["250"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'handlePagination'. Either include it or remove the dependency array.",["252"],"no-unused-vars","'postSearchData' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'props.getOperatorsList' and 'props.kc'. Either include them or remove the dependency array.",["253"],"no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},"Update the dependencies array to be: [props.getDashboardCounters, props.kc, props.getCampaignStatus, props.getCompletedCampaignsList, start]",{"range":"260","text":"261"},"Update the dependencies array to be: [handlePagination]",{"range":"262","text":"263"},"Update the dependencies array to be: [props.getOperatorsList, props.kc]",{"range":"264","text":"265"},[1506,1599],"[props.getDashboardCounters, props.kc, props.getCampaignStatus, props.getCompletedCampaignsList, start]",[11475,11477],"[handlePagination]",[13322,13324],"[props.getOperatorsList, props.kc]"]